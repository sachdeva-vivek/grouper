Authz Standard API Client USAGE:

This program runs queries against an Authz Standard API Service
The system exit code will be 0 for success, and not 0 for failure
Output data is printed to stdout, error messages are printed to stderr or logs (configured in authzStandardApi.client.properties)
Authz Standards API Client webpage: https://wiki.internet2.edu/confluence/display/cifer/Authz+Standard+API+client

Arguments are in the format: --argName=argValue
Example argument: --operation=encryptPassword
Example argument(OS dependent): --operation="value with whitespace"

Optional arguments below are in [brackets]

###############################################
## Web Service operations

defaultResourceWs web service usage:
  java -jar authzStandardApiClient.jar --operation=defaultResourceWs [--outputTemplate=somePattern] [--format=xml|json] [--debug=true] [--indent=true]
  e.g.: java -jar authzStandardApiClient.jar --operation=defaultResourceWs
  output:
    xml: https://authz.school.edu/authzStandardApi/authzStandardApi.xml
    json: https://authz.school.edu/authzStandardApi/authzStandardApi.json
  
  
defaultVersionResourceWs web service usage:
  java -jar authzStandardApiClient.jar --operation=defaultVersionResourceWs [--outputTemplate=somePattern] [--format=xml|json] [--debug=true] [--indent=true]
  e.g.: java -jar authzStandardApiClient.jar --operation=defaultVersionResourceWs
  output:
    v1: /v1.json
  
versionResourceWs web service usage:
  java -jar authzStandardApiClient.jar --operation=versionResourceWs [--outputTemplate=somePattern] [--format=xml|json] [--debug=true] [--indent=true]
  e.g.: java -jar authzStandardApiClient.jar --operation=versionResourceWs
  output:
    entities: /v1/entities.json
    folders: /v1/folders.json
    groups: /v1/groups.json
    permissions: /v1/permissions.json
  
folderSaveWs web service usage:
  java -jar authzStandardApiClient.jar --operation=folderSaveWs [--name=a:b] [--displayName=A:B] [--description="some description"] [--saveMode=insert|update|insert_or_update] [--createParentFoldersIfNotExist] [--folderLookupName=a:b] [--folderLookupId=abc123] [--folderLookupHandleName=something] [--folderLookupHandleValue=somethingElse] [--outputTemplate=somePattern] [--format=xml|json] [--debug=true] [--indent=true]
  e.g.: java -jar authzStandardApiClient.jar --operation=folderSaveWs --name=a:b  
  output: Success: code: FOLDER_CREATED: a:b
  
  
testSuite usage:
  java -jar authzStandardApiClient.jar --operation=testSuite [--tests=defaultResource,folderSave.testPutFolderUpdateXml] [--verbose=low|medium|high|higher] [--debug=true] [--indent=true]
  e.g.: java -jar authzStandardApiClient.jar --operation=testSuite --verbose=high


###############################################
Common options:
  --outputTemplate=${index}: ${someObject.propertyName}
    the output template allow the caller to customize what is displayed in the output from the XML/JSON
    anything in ${} will be evaluated, and there are different variables available for various operations.
    if you pass in --debug=true, it will tell you the xml and the variables you can use.  You can drill down
    in the variables, e.g. ${someContainer.someObject.descriptino}, you can do operations, e.g. ${index+1},
    you can do simple string utilities from StandardApiClientUtils or StandardApiClientCommonUtils, e.g.
    ${standardApiClientUtils.trimToEmpty(someGroup.name)}

  --debug=true
    this will display debug information including the request and response to stderr

  --saveResultsToFile=/tmp/somefile.txt
    you can save the stdout to a file if you like

  --actAsSubjectUri=a:subjId
    if you want to run the operation as a different user than the user who is authenticating
    to the web service, then specify the actAsSubjectUri.  You would do this e.g. to run a command 
    as admin, or as a user who is using the end layer application.  Note you need permissions 
    to do this in the Authz Standard API server.

  --clientVersion=v1
    generally this does not need to be changed.  This is the version label sent to the web service
    which might affect the output from the web service.  It might also affect the request to the web 
    service

  --format=xml|json
    this really shouldnt matter, its the format of the messages going back and forth between the server,
    but for debugging or showing how the messages look, put in a format
    
  --indent=true
    this really shouldnt matter, its if the server should indent the response back to the client.  You 
    should now do this in production, only for debugging.  The client can indent the messages too... if
    this is true then the client will not indent the messages, and will use the indenting that the server
    uses